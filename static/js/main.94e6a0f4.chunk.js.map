{"version":3,"sources":["images/percy.jpg","images/archie.jpg","images/isabelle.png","images/tom.png","images/fran.JPG","IMG_3041.JPG","components/countdown.js","components/age.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Countdown","props","state","days","hours","min","sec","this","interval","setInterval","date","calculateCountdown","setState","stop","endDate","console","log","diff","Date","parse","timeLeft","years","minutes","seconds","Math","floor","clearInterval","countDown","className","Component","defaultProps","App","currentYear","getFullYear","data","0","name","birthday","birthYear","img","archie","1","francesca","2","isabelle","3","percy","4","tom","nextBirthday","today","thisMonth","getMonth","thisDate","getDate","birthDate","birthMonth","day","thisYear","nextYear","Object","keys","map","item","index","src","alt","string","month","year","formatDate","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94e6a0f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/percy.dd43e2de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/archie.f86a7041.jpg\";","module.exports = __webpack_public_path__ + \"static/media/isabelle.0f7bbded.png\";","module.exports = __webpack_public_path__ + \"static/media/tom.81b3e9e8.png\";","module.exports = __webpack_public_path__ + \"static/media/fran.bfaef4ce.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_3041.ee299f7d.JPG\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0\n    };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  calculateCountdown(endDate) {\n    console.log(endDate)\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n\n    if (diff >= 365.25 * 86400) {\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeft.years * 365.25 * 86400;\n    }\n\n    if (diff >= 86400) {\n      // 24 * 60 * 60\n      timeLeft.days = Math.floor(diff / 86400);\n      diff -= timeLeft.days * 86400;\n    }\n\n    if (diff >= 3600) {\n      // 60 * 60\n      timeLeft.hours = Math.floor(diff / 3600);\n      diff -= timeLeft.hours * 3600;\n    }\n\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60);\n      diff -= timeLeft.min * 60;\n    }\n\n    timeLeft.sec = diff;\n\n    return timeLeft;\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const countDown = this.state;\n    return (\n      <div className=\"countDown\">\n        <strong>{countDown.days} </strong>\n        <span>{countDown.days === 1 ? \"Day\" : \"Days\"} - </span>\n        <strong>{countDown.hours} </strong>\n        <strong> {countDown.hours === 1 ? \"Hour\" : \"Hours\"} </strong>\n        <strong>{countDown.min} </strong>\n        <strong> {countDown.min === 1 ? \"Minute\" : \"Minutes\"} </strong>\n        <strong>{countDown.sec} </strong>\n        <strong> {countDown.sec === 1 ? \"Second\" : \"Seconds\"} </strong>\n      </div>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nCountdown.defaultProps = {\n  date: new Date()\n};\n\nexport default Countdown;\n","import React, { Component } from \"react\";\n\nclass Age extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      years: 0,\n    };\n  }\n\n  \n  componentDidMount() {\n    const date = this.calculateAge(this.props.date);\n    date ? this.setState(date) : this.stop();\n  }\n  \n  calculateAge(date) {\n    let diff = (Date.now() - Date.parse(date)) / 1000;\n\n    const age = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n\n    if (diff >= 365.25 * 86400) {\n      age.years = Math.floor(diff / (365.25 * 86400));\n      diff -= age.years * 365.25 * 86400;\n    }\n    console.log(age);\n    return age;\n  }\n\n  render() {\n    const age = this.state;\n    return (\n      <div className=\"countDown\">\n      <strong>{age.years} </strong>   \n      </div>\n    )\n  }\n}\n\nexport default Age;\n","import React from \"react\";\nimport image from \"../src/IMG_3041.JPG\";\nimport Countdown from \"../src/components/countdown\";\nimport Footer from \"../src/components/footer\";\nimport \"./App.css\";\nimport percy from \"../src/images/percy.jpg\"\nimport archie from \"../src/images/archie.jpg\"\nimport isabelle from \"../src/images/isabelle.png\"\nimport tom from \"../src/images/tom.png\"\nimport francesca from \"../src/images/fran.JPG\"\nimport Age from \"../src/components/age\"\n\nfunction App() {\n  let date = new Date();\n  let currentYear = date.getFullYear()\n  let data = {\n    0: [\n      { name: 'Archie', birthday: '2018-11-17T08:00:00.889Z', birthYear: 2018, img: archie, date: `${currentYear}-11-17` }\n    ],\n    1: [\n      { name: 'Francesca', birthday: '2016-01-13T08:00:00.889Z', birthYear: 2016, img: francesca, date: `${currentYear}-01-13` }\n    ],\n    2: [\n      { name: 'Isabelle', birthday: '2010-12-06T08:00:00.889Z', birthYear: 2010, img: isabelle, date: `${currentYear}-12-06` }\n    ],\n    3: [\n      { name: 'Percy', birthday: '2017-07-29T08:00:00.889Z', birthYear: 2017, img: percy, date: `${currentYear}-07-29` }\n    ],\n    4: [\n      { name: 'Tom', birthday: '2013-06-03T08:00:00.889Z', birthYear: 2013, img: tom, date: `${currentYear}-06-03` }\n    ]\n  }\n\n  function formatDate(string) {\n    let date = new Date(string);\n    let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October',\t'November', 'December'];\n\n    let month = months[date.getMonth()];\n    let year = date.getDate();\n\n    return `${month} ${year}`;\n  }\n\n  function nextBirthday (date) {\n    let today = new Date();\n    let thisMonth = today.getMonth() + 1\n    let thisDate = today.getDate();\n\n    let birthDate = new Date(date);\n    let birthMonth = birthDate.getMonth() + 1;\n    let day = birthDate.getDate();\n\n    let thisYear = today.getFullYear();\n    let nextYear = today.getFullYear() + 1;\n  \n    if ( birthMonth < thisMonth ) {\n      return nextYear + '-' + birthMonth + '-' + day;\n    }\n\n    if (birthMonth === thisMonth) {\n      if (thisDate < day) {\n        return thisYear + '-' + birthMonth + '-' + day;\n      }\n\n      if (thisDate === day) {\n        return thisYear + '-' + birthMonth + '-' + day;\n      }\n\n      if (thisDate > day) {\n        return nextYear + '-' + birthMonth + '-' + day;\n      }\n    }\n\n    if (birthMonth > thisMonth) {\n      return nextYear + '-' + birthMonth + '-' + birthDate;\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>How long until I am...?</h1>\n      {Object.keys(data).map((item, index) => \n      <>\n        <h3>{ data[item][0].name }</h3>\n        <img src={ data[item][0].img } alt={data[item][0].name}/>\n        <p>Birthday is on <strong>{ formatDate(data[item][0].birthday) }</strong></p>\n        {`Countdown until ${data[item][0].name}'s birthday - `}<Countdown date={nextBirthday(data[item][0].date)} />\n      </>\n      )}\n      </header>\n    </div>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <h3>Archie's birthday</h3>\n    //     <img src={ archie } className=\"App-logo\" alt=\"logo\" />\n    //     <p>November 17</p>\n    //     Countdown until Archie's birthday - <Countdown date=\"2020-11-17T08:00:00.889Z\" /> \n    //     Archie is <Age date=\"2018-11-17T08:00:00.889Z\"/>\n\n    //     <h3>Francesca's birthday</h3>\n    //     <img src={ francesca } className=\"App-logo\" alt=\"logo\" />\n    //     <p>January 13</p>\n    //     Countdown until Francesca's birthday - <Countdown date=\"2020-01-13T08:00:00.889Z\" /> \n    //     Francesca is <Age date=\"2016-01-13T08:00:00.889Z\"/>\n\n    //     <h3>Isabelle's birthday</h3>\n    //     <img src={ isabelle } className=\"App-logo\" alt=\"logo\" />\n    //     <p>December 06</p>\n    //     Countdown until Isabelle's birthday - <Countdown date=\"2020-12-06T08:00:00.889Z\" /> \n    //     Isabelle is <Age date=\"2010-12-06T08:00:00.889Z\"/>\n\n    //     <h3>Percy's birthday</h3>\n    //     <img src={ percy } className=\"App-logo\" alt=\"logo\" />\n    //     <p>July 30</p>\n    //     Countdown until Percy's birthday - <Countdown date=\"2020-07-29T08:00:00.889Z\" />\n    //     Percy is <Age date=\"2017-07-29T08:00:00.889Z\"/>\n\n    //     <h3>Tom's birthday</h3>\n    //     <img src={ tom } className=\"App-logo\" alt=\"logo\" />\n    //     <p>December 06</p>\n    //     Countdown until Tom's birthday - <Countdown date=\"2020-06-03T08:00:00.889Z\" /> \n    //     Tom is <Age date=\"2013-06-03T08:00:00.889Z\"/>\n\n    //   </header>\n    //   {/* <Darkmode /m > */}\n    //   <Footer />\n    // </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}